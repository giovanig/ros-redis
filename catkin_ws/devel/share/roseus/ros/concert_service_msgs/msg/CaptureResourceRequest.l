;; Auto-generated. Do not edit!


(when (boundp 'concert_service_msgs::CaptureResourceRequest)
  (if (not (find-package "CONCERT_SERVICE_MSGS"))
    (make-package "CONCERT_SERVICE_MSGS"))
  (shadow 'CaptureResourceRequest (find-package "CONCERT_SERVICE_MSGS")))
(unless (find-package "CONCERT_SERVICE_MSGS::CAPTURERESOURCEREQUEST")
  (make-package "CONCERT_SERVICE_MSGS::CAPTURERESOURCEREQUEST"))

(in-package "ROS")
;;//! \htmlinclude CaptureResourceRequest.msg.html


(defclass concert_service_msgs::CaptureResourceRequest
  :super ros::object
  :slots (_rocon_uri _release ))

(defmethod concert_service_msgs::CaptureResourceRequest
  (:init
   (&key
    ((:rocon_uri __rocon_uri) "")
    ((:release __release) nil)
    )
   (send-super :init)
   (setq _rocon_uri (string __rocon_uri))
   (setq _release __release)
   self)
  (:rocon_uri
   (&optional __rocon_uri)
   (if __rocon_uri (setq _rocon_uri __rocon_uri)) _rocon_uri)
  (:release
   (&optional __release)
   (if __release (setq _release __release)) _release)
  (:serialization-length
   ()
   (+
    ;; string _rocon_uri
    4 (length _rocon_uri)
    ;; bool _release
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _rocon_uri
       (write-long (length _rocon_uri) s) (princ _rocon_uri s)
     ;; bool _release
       (if _release (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _rocon_uri
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _rocon_uri (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _release
     (setq _release (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get concert_service_msgs::CaptureResourceRequest :md5sum-) "9ef24df11d8c425fa509296ab551e5d4")
(setf (get concert_service_msgs::CaptureResourceRequest :datatype-) "concert_service_msgs/CaptureResourceRequest")
(setf (get concert_service_msgs::CaptureResourceRequest :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======

# Used by turtle_concert/teleop service to handle requests to capture
# teleopable robots.

# Usually the rocon uri provided to the remocon in the list of available
# teleopable robots.
string rocon_uri
# Capture or release the robot - pythonic default is False (i.e. capture) 
bool release

")



(provide :concert_service_msgs/CaptureResourceRequest "9ef24df11d8c425fa509296ab551e5d4")


