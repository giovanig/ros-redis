// Auto-generated. Do not edit!

// (in-package concert_service_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let CaptureResourcePairRequest = require('./CaptureResourcePairRequest.js');
let CaptureResourcePairResponse = require('./CaptureResourcePairResponse.js');

//-----------------------------------------------------------

class CaptureResourcePair {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.pair_request = null;
      this.pair_response = null;
    }
    else {
      if (initObj.hasOwnProperty('pair_request')) {
        this.pair_request = initObj.pair_request
      }
      else {
        this.pair_request = new CaptureResourcePairRequest();
      }
      if (initObj.hasOwnProperty('pair_response')) {
        this.pair_response = initObj.pair_response
      }
      else {
        this.pair_response = new CaptureResourcePairResponse();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type CaptureResourcePair
    // Serialize message field [pair_request]
    bufferOffset = CaptureResourcePairRequest.serialize(obj.pair_request, buffer, bufferOffset);
    // Serialize message field [pair_response]
    bufferOffset = CaptureResourcePairResponse.serialize(obj.pair_response, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type CaptureResourcePair
    let len;
    let data = new CaptureResourcePair(null);
    // Deserialize message field [pair_request]
    data.pair_request = CaptureResourcePairRequest.deserialize(buffer, bufferOffset);
    // Deserialize message field [pair_response]
    data.pair_response = CaptureResourcePairResponse.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += CaptureResourcePairRequest.getMessageSize(object.pair_request);
    length += CaptureResourcePairResponse.getMessageSize(object.pair_response);
    return length;
  }

  static datatype() {
    // Returns string type for a message object
    return 'concert_service_msgs/CaptureResourcePair';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '119d2731866ad230a6fd7e87d8a22b1f';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    CaptureResourcePairRequest pair_request
    CaptureResourcePairResponse pair_response
    
    ================================================================================
    MSG: concert_service_msgs/CaptureResourcePairRequest
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    uuid_msgs/UniqueID id
    CaptureResourceRequest request
    
    ================================================================================
    MSG: uuid_msgs/UniqueID
    # A universally unique identifier (UUID).
    #
    #  http://en.wikipedia.org/wiki/Universally_unique_identifier
    #  http://tools.ietf.org/html/rfc4122.html
    
    uint8[16] uuid
    
    ================================================================================
    MSG: concert_service_msgs/CaptureResourceRequest
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    # Used by turtle_concert/teleop service to handle requests to capture
    # teleopable robots.
    
    # Usually the rocon uri provided to the remocon in the list of available
    # teleopable robots.
    string rocon_uri
    # Capture or release the robot - pythonic default is False (i.e. capture) 
    bool release
    
    ================================================================================
    MSG: concert_service_msgs/CaptureResourcePairResponse
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    uuid_msgs/UniqueID id
    CaptureResourceResponse response
    
    ================================================================================
    MSG: concert_service_msgs/CaptureResourceResponse
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    # Success or failure of the allocation
    bool result
    
    rocon_std_msgs/Remapping[] remappings
    
    
    ================================================================================
    MSG: rocon_std_msgs/Remapping
    # Describes your typical ros remapping
    
    string remap_from
    string remap_to
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new CaptureResourcePair(null);
    if (msg.pair_request !== undefined) {
      resolved.pair_request = CaptureResourcePairRequest.Resolve(msg.pair_request)
    }
    else {
      resolved.pair_request = new CaptureResourcePairRequest()
    }

    if (msg.pair_response !== undefined) {
      resolved.pair_response = CaptureResourcePairResponse.Resolve(msg.pair_response)
    }
    else {
      resolved.pair_response = new CaptureResourcePairResponse()
    }

    return resolved;
    }
};

module.exports = CaptureResourcePair;
