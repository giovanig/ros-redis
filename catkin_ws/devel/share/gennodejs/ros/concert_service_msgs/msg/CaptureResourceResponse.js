// Auto-generated. Do not edit!

// (in-package concert_service_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let rocon_std_msgs = _finder('rocon_std_msgs');

//-----------------------------------------------------------

class CaptureResourceResponse {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.result = null;
      this.remappings = null;
    }
    else {
      if (initObj.hasOwnProperty('result')) {
        this.result = initObj.result
      }
      else {
        this.result = false;
      }
      if (initObj.hasOwnProperty('remappings')) {
        this.remappings = initObj.remappings
      }
      else {
        this.remappings = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type CaptureResourceResponse
    // Serialize message field [result]
    bufferOffset = _serializer.bool(obj.result, buffer, bufferOffset);
    // Serialize message field [remappings]
    // Serialize the length for message field [remappings]
    bufferOffset = _serializer.uint32(obj.remappings.length, buffer, bufferOffset);
    obj.remappings.forEach((val) => {
      bufferOffset = rocon_std_msgs.msg.Remapping.serialize(val, buffer, bufferOffset);
    });
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type CaptureResourceResponse
    let len;
    let data = new CaptureResourceResponse(null);
    // Deserialize message field [result]
    data.result = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [remappings]
    // Deserialize array length for message field [remappings]
    len = _deserializer.uint32(buffer, bufferOffset);
    data.remappings = new Array(len);
    for (let i = 0; i < len; ++i) {
      data.remappings[i] = rocon_std_msgs.msg.Remapping.deserialize(buffer, bufferOffset)
    }
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    object.remappings.forEach((val) => {
      length += rocon_std_msgs.msg.Remapping.getMessageSize(val);
    });
    return length + 5;
  }

  static datatype() {
    // Returns string type for a message object
    return 'concert_service_msgs/CaptureResourceResponse';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'f42045c0fb1faf0f4b9b3be576a75c21';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM A SERVICE PAIR DEFINITION ======
    
    # Success or failure of the allocation
    bool result
    
    rocon_std_msgs/Remapping[] remappings
    
    
    ================================================================================
    MSG: rocon_std_msgs/Remapping
    # Describes your typical ros remapping
    
    string remap_from
    string remap_to
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new CaptureResourceResponse(null);
    if (msg.result !== undefined) {
      resolved.result = msg.result;
    }
    else {
      resolved.result = false
    }

    if (msg.remappings !== undefined) {
      resolved.remappings = new Array(msg.remappings.length);
      for (let i = 0; i < resolved.remappings.length; ++i) {
        resolved.remappings[i] = rocon_std_msgs.msg.Remapping.Resolve(msg.remappings[i]);
      }
    }
    else {
      resolved.remappings = []
    }

    return resolved;
    }
};

module.exports = CaptureResourceResponse;
